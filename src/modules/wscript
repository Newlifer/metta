#!/usr/bin/env python
# -*- coding: utf-8 -*-
from waflib import Options
import os

def build(bld):
    arch = Options.options.arch
    platform = Options.options.platform

    complib = bld.stlib(
        source = 'module-entry.cpp heap_new.cpp',
        # includes = ['.', '../runtime', '../runtime/stl', '../interfaces', '../kernel/generic', '../kernel/arch/'+arch, '../kernel/arch/shared', '../kernel/platform/'+platform, '../kernel/platform/shared'],
        target = 'component_support',
        env = bld.all_envs['KERNEL_ENV'].derive()
    )
    incs = []
    for x in complib.env.INCLUDE_DIRS:
        if os.path.isabs(x):
            incs.append(x)
        else:
            incs.append('../'+x)
    complib.includes = incs

    bld.recurse('platform/shared')
    bld.recurse('platform/'+platform+'/mmu_mod')
    bld.recurse('root_domain')
    bld.recurse('frames_mod')
    bld.recurse('heap_mod')
    bld.recurse('stretch_allocator_mod')
    bld.recurse('stretch_table_mod')
    bld.recurse('stretch_driver_mod')
    bld.recurse('exceptions_mod')
    bld.recurse('hashtables_mod')
    bld.recurse('typesystem_mod')

# kate: indent-width 4; replace-tabs on;
# vim: set et sw=4 ts=4 sts=4 cino=(4 :
