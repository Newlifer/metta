from the stl we use

- unordered_map (safe_card64table, stringtable, stretch_table_mod) - to implement hash_map of entries
- vector = to implement sequence<T> in interfaces


Things needed to fly:
+ forward and reverse iterators
+ new
+ mtl::for_each(begin, end, lambda); min/max
+ functional
== these will have to have allocators reimplemented bde style ==
- unordered_map<T>
- vector<T> would be nice to get going
- string


1. forward iterators
2. mkt::min, mkt::max, mkt::for_each
3. new can be as is
4. mkt::hash_map
5. mkt::vector
6. mkt::string
