# A base type for chains of handler closures e.g. for event
# notifications or timeouts.
#
## A chained handler interface is used as the base type for handler
## closures which may be chained together. It allows members of the
## chain to insert/remove themselves into/from the chain cleanly.

local interface chained_handler_v1
{
    ## Position describes the position of one handler in a chain
    ## relative to another. The first handler in the chain (i.e. the
    ## first handler to receive notifications/events) is "before" all
    ## other handlers.
    enum position { before, after }

    ## set_link tells a handler that its neighbour in the chain
    ## referred to be the "pos" parameter has changed. The event
    ## source for this chain should be masked while this call is in
    ## progress (e.g. by using activation_dispatcher.Mask/UnmaskEvent, or
    ## vcpu.ActivationsOff/On)

    set_link(position pos, chained_handler_v1& link);
}
