#
# Part of Metta OS. Check http://metta.exquance.com for latest version.
#
# Copyright 2007 - 2012, Stanislav Karchebnyy <berkus@exquance.com>
#
# Distributed under the Boost Software License, Version 1.0.
# (See file LICENSE_1_0.txt or a copy at http://www.boost.org/LICENSE_1_0.txt)
#
## Metta uses events and channels as the abstraction for
## communication betweeen virtual processors. This interface defines
## the basic types (including exceptions) for the "Events" and
## associated interfaces.

local interface event_v1
{
    #
    # Types
    #

    ## An event count is a monotonically increasing value of type "value"
    ## associated with a domain.
    type card64 value;

    ## An event count is identified within its domain by a "Count".
    type opaque count;

    ## Each end of an inter-domain communication ("IDC") channel has one
    ## one or more "(receiver, sender)" pairs of event counts connected to corresponding
    ## pairs at the peer domain.

    record pair {
        count receiver;
        count sender;
    }
    sequence<pair> pairs;

    ## Threads can order their actions by waiting on counts for values obtained from a sequencer.
    type opaque sequencer;
}
