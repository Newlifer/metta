Menu menu = new Menu([
        "Cut",
        "Copy",
        "Paste",
        "Send To..."
    ]);

boolean menuShown = false;

void setup() {
    size(600, 600);
    smooth();
    frameRate(30);
  
    menu.prepare();
}

// Main draw loop
void draw() {
  
    background(#666666);
  
    if (menuShown) menu.update(mouseX, mouseY);
  
}

void mousePressed() {
   
   menuShown = true; 
   
}

class RadialComponent {

    void update(float center_x, float center_y) {};

};

class MenuCloseButton extends RadialComponent {
        
    float btn_radius = 10;
    color button_color = color(#660000);
    
    MenuCloseButton() {
        
    } 
    
    void update(float center_x, float center_y) {
        fill(button_color);   
        ellipse(center_x, center_y, btn_radius * 2, btn_radius * 2);
    } 
    
}

class MenuItem extends RadialComponent {

    String name;

    color item_color;
    float start_radius, end_radius;    
    float start_angle, end_angle;
    
    MenuItem(String name) {
        this.name = name;
        this.end_radius = 90.0;
    }
    
    void set_radius(float start_radius, float end_radius) {
        this.start_radius = start_radius;
        this.end_radius = end_radius;
    }
    
    void set_radius(float start_radius) {
        set_radius(start_radius, this.end_radius);
    }
    
    void set_angle(float start_angle, float end_angle) {
        this.start_angle = start_angle;
        this.end_angle = end_angle;
    }
    
    void set_color(color item_color) {
        this.item_color = item_color;
    }

    void update(float center_x, float center_y) {        
        fill(item_color);
        arc(center_x, center_y, 
            end_radius * 2, end_radius * 2, 
            start_angle, end_angle); // outer arc
        noFill();
        arc(center_x, center_y, 
            start_radius * 2, start_radius * 2, 
            start_angle, end_angle); // inner arc
    }

};

class Menu extends RadialComponent {

    color stroke_color = color(#eeeeee);
    color start_color = color(#606060);
    // color[] items_colors;
    float start_angle = 0;

    MenuItem[] items;
    MenuCloseButton close_btn;
    
    Menu(String[] items_names) {
        close_btn = new MenuCloseButton();
        
        float one_sixth_pi = HALF_PI / 3;
        float start_radius = close_btn.btn_radius /*+ 1*/;
        
        float cur_color = start_color;
        float cur_angle = start_angle;
        float end_angle = cur_angle + one_sixth_pi;
        
        items = new MenuItem[];
        for (int i = 0; i <= items_names.length; i++) {
            
            MenuItem item = new MenuItem(items_names[i]);
            item.set_color(cur_color);            
            item.set_radius(start_radius);
            item.set_angle(cur_angle, end_angle);
            items[i] = item;
            
            cur_angle += one_sixth_pi;
            end_angle = cur_angle + one_sixth_pi;
        }        
        
    }
    
    void prepare() {
        // called on processing setup()
    }

    void update(float center_x, float center_y) {
        stroke(stroke_color);
        for (int i = 0; i < items.length; i++) {
            items[i].update(center_x, center_y);
        }
        close_btn.update(center_x, center_y);        
    }

};
