Metta architecture description

Metta is an exocortex OS: it is your external memory and social interaction agent. This is the primary task aside from
the additional multimedia and mobile assistant abilities. As an exocortex, OS's task is to provide means and ends to
sharing and gathering relevant information for you.

As an information gathering assistant the OS must support receiving, filtering, classifying and presenting relevant
information in a suitable form.

As an information sharing assistant the OS must support specifying privacy levels, distributing the secure storage,
publishing directly to your peers and to other media.

To provide this level of service, the key implementation principles are:

 * It must be possible to distribute work and storage seamlessly between trusted nodes on the user's network.
 * It must be possible to easily add and remove nodes from the trusted network.
 * Information should be synchronized between nodes whenever possible.
 * It should not be possible to bring down the node by overwhelming it with work: QoS guarantees must be agreed upon.
 * Storage should be associative, not hierarchical. Cross-node links must be possible with full semantic relation data.
 * Your data must be redundant, highly available and securely stored. "Publish once, share everywhere".
 * Processing of multimedia and semantically meaningful data must be fast and lean.

Principles lead to technical requirements for the OS:

 * QoS management on all levels in the system. Agents must be able to negotiate necessary resources and OS must maintain
   promised resource guarantees.
 * Highly componentised and sandboxed system. When executing agents on behalf of other users it is crucial to provide
   data security for your own and for their data.
 * Low system management overhead.


Implementation details

Metta is implemented as a Single Address Space OS, for QoS management it uses technologies found in Nemesis OS, part of Pegasus project from the University of Cambridge.

