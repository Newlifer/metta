Use c_case_naming_convention everywhere instead of CamelCaseConvention --
all symbols are lower case, words are separated by _ symbol (for example
global_event_queue).

Simple (atomic) types have _t appended,
complex types that denote structured objects do not:

 * typedef int sint32_t;
 * class kernel;

* Do not be too spacious in the code:

Instead of 

template < typename T >
inline void construct_inplace(T * memory,const T & value)
{
    (void)new(static_cast < void * >(memory))T(value);
}

code should read

template <typename T>
inline void construct_inplace(T* memory,const T& value)
{
    (void)new(static_cast<void*>(memory))T(value);
}

* Instead of #define based include guards

#ifndef __MEMORY_H
#define __MEMORY_H
// .....
#endif

better use 

#pragma once
