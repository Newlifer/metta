
specialization instead of plain inheritance?

struct arch_x86 {};

template<typename arch_t>
class virtual_address_space_t;

template
class virtual_address_space_t<arch_x86>
{
    // Specialized for x86
};

----------------------------------------------------------------------

Kernel interface:

Interface page available via kernel_interface_syscall.

Unbuffered IPC - reduces memory copying.
IPC types: Send, Receive, Wait, Call, Reply_and_Wait (+ idempotent versions?)

Try and have separate ABI and APIs for the kernel, much better for portability and writing new software.

----------------------------------------------------------------------

/*
* The Pentium Pro and later support global PDE/PTE entries,
* which are not removed from the TLB when we switch tasks.
*/
pmap_global_ext = (base_cpuid.feature_flags & CPUF_PAGE_GLOBAL_EXT) ? INTEL_PTE_GLOBAL : 0;

!!Print L4 docs when in office!!

----------------------------------------------------------------------

Pistachio's directory structure:
kernel
+--config
+--kdb
+--src
   +--api
      +--v4
   +--arch
      +--powerpc
      +--powerpc64
      +--x86
   +--generic
   +--glue
      +--v4-powerpc
      +--v4-powerpc64
      +--v4-x86
   +--kdb
   +--platform
      +--efi
      +--generic
      +--ofg5
      +--ofpower3
      +--ofpower4
      +--ofppc
      +--pc99
      +--simics

----------------------------------------------------------------------

When you send multiple or big files to someone, they will be transparently compressed into a vxa archive with decoder for recipient's architecture(s) embedded, and then transparently uncompressed at the receiving side.

----------------------------------------------------------------------
